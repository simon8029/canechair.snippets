{
	"ReactJS : JS : Component : Class": {
		"prefix": "ccReactJS_JS_Component_Class",
		"body": [
			"import React from \"react\";",
			"",
			"class ${1:__ClassName__} extends React.Component {",
			"\trender() {",
			"\t\treturn (",
			"\t\t\t<div>",
			"\t\t\t\t${1:__ClassName__} Works!",
			"\t\t\t</div>",
			"\t\t);",
			"\t}",
			"}",
			"",
			"export default ${1:__ClassName__};",
			""
		]
	},
	"ReactJS : JS : Component : Container": {
		"prefix": "ccReactJS_JS_Component_Container",
		"body": [
			"import React from 'react';",
			"import { connect } from 'react-redux';",
			"",
			"class ${1:__ComponentName__} extends React.Component {",
			"\tconstructor(props) {",
			"\t\tsuper(props);",
			"\t\tthis.state = {};",
			"\t}",
			"",
			"\trender() {",
			"\t\treturn <div>${1:__ComponentName__} Works!</div>;",
			"\t}",
			"}",
			"",
			"const mapStateToProps = store => {return {}};",
			"const mapDispatchToProps = {};",
			"",
			"export default connect(",
			"\tmapStateToProps,",
			"\tmapDispatchToProps",
			")(${1:__ComponentName__});",
			""
		]
	},
	"ReactJS : JS : Component : Functional": {
		"prefix": "ccReactJS_JS_Component_Functional",
		"body": [
			"import React from 'react';",
			"",
			"const ${1:__ComponentName__} = () => {",
			"  <div>${1:__ComponentName__} Component Works.</div>;",
			"};",
			"",
			"export default ${1:__ComponentName__};",
			""
		]
	},
	"ReactJS : JS : Component : Hooks": {
		"prefix": "ccReactJS_JS_Component_Hooks",
		"body": [
			"import React, { useState } from 'react';",
			"import './${1:__ComponentName__}.scss';",
			"",
			"export function ${1:__ComponentName__}() {",
			"return <div className=\"${1:__ComponentName__}\">${1:__ComponentName__}</div>;",
			"}"
		]
	},
	"ReactJS : JS : NewAction": {
		"prefix": "ccReactJS_JS_NewAction",
		"body": [
			"import axios from 'axios';",
			"import * as ${1:__ComponentName__}ActionTypes from './${1:__ComponentName__}ActionTypes';",
			"import { BaseUrl } from '../config/common';",
			"",
			"export function getAll${1:__ComponentName__}sStart(new${1:__ComponentName__}) {",
			"\treturn dispatch => {",
			"\t\taxios.get(`\\${BaseUrl}/${1:__ComponentName__}s`).then(",
			"\t\t\tres => {",
			"\t\t\t\tif (res.status === 200) {",
			"\t\t\t\t\tdispatch(getAll${1:__ComponentName__}sSuccess(res.data));",
			"\t\t\t\t}",
			"\t\t\t},",
			"\t\t\terr => {",
			"\t\t\t\tdispatch(getAll${1:__ComponentName__}sFailure(err));",
			"\t\t\t}",
			"\t\t);",
			"\t};",
			"}",
			"",
			"const getAll${1:__ComponentName__}sSuccess = data => {",
			"\treturn {",
			"\t\ttype: ${1:__ComponentName__}ActionTypes.GET_ALL_${2:__CapitalComponentName__}S_SUCCESS,",
			"\t\tpayload: data",
			"\t};",
			"};",
			"const getAll${1:__ComponentName__}sFailure = error => {",
			"\treturn {",
			"\t\ttype: ${1:__ComponentName__}ActionTypes.GET_ALL_${2:__CapitalComponentName__}S_FAILURE,",
			"\t\tpayload: error",
			"\t};",
			"};",
			"",
			"export function addNew${1:__ComponentName__}Start(new${1:__ComponentName__}) {",
			"\treturn dispatch => {",
			"\t\taxios.post(`\\${BaseUrl}/${1:__ComponentName__}s`, new${1:__ComponentName__}).then(",
			"\t\t\tres => {",
			"\t\t\t\tif (res.status === 201) {",
			"\t\t\t\t\tdispatch(addNew${1:__ComponentName__}Success(res.data));",
			"\t\t\t\t}",
			"\t\t\t},",
			"\t\t\terr => {",
			"\t\t\t\tdispatch(addNew${1:__ComponentName__}Failure(err));",
			"\t\t\t}",
			"\t\t);",
			"\t};",
			"}",
			"",
			"const addNew${1:__ComponentName__}Success = data => {",
			"\treturn {",
			"\t\ttype: ${1:__ComponentName__}ActionTypes.ADD_NEW_${2:__CapitalComponentName__}_SUCCESS,",
			"\t\tpayload: data",
			"\t};",
			"};",
			"const addNew${1:__ComponentName__}Failure = error => {",
			"\treturn {",
			"\t\ttype: ${1:__ComponentName__}ActionTypes.ADD_NEW_${2:__CapitalComponentName__}_FAILURE,",
			"\t\tpayload: error",
			"\t};",
			"};",
			"",
			"export function delete${1:__ComponentName__}Start(id) {",
			"\treturn dispatch => {",
			"\t\taxios.delete(`\\${BaseUrl}/${1:__ComponentName__}s/\\${id}/`).then(",
			"\t\t\tres => {",
			"\t\t\t\tif (res.status === 200) {",
			"\t\t\t\t\tdispatch(delete${1:__ComponentName__}Success(id));",
			"\t\t\t\t}",
			"\t\t\t},",
			"\t\t\terr => {",
			"\t\t\t\tdispatch(delete${1:__ComponentName__}Failure(err));",
			"\t\t\t}",
			"\t\t);",
			"\t};",
			"}",
			"",
			"const delete${1:__ComponentName__}Success = data => {",
			"\treturn {",
			"\t\ttype: ${1:__ComponentName__}ActionTypes.DELETE_${2:__CapitalComponentName__}_SUCCESS,",
			"\t\tpayload: data",
			"\t};",
			"};",
			"const delete${1:__ComponentName__}Failure = error => {",
			"\treturn {",
			"\t\ttype: ${1:__ComponentName__}ActionTypes.DELETE_${2:__CapitalComponentName__}_FAILURE,",
			"\t\tpayload: error",
			"\t};",
			"};",
			"",
			"export function update${1:__ComponentName__}Start(id, new${1:__ComponentName__}) {",
			"\treturn dispatch => {",
			"\t\taxios.put(`\\${BaseUrl}/${1:__ComponentName__}s/\\${id}/`, new${1:__ComponentName__}).then(",
			"\t\t\tres => {",
			"\t\t\t\tif (res.status === 200) {",
			"\t\t\t\t\tdispatch(update${1:__ComponentName__}Success(res.data));",
			"\t\t\t\t}",
			"\t\t\t},",
			"\t\t\terr => {",
			"\t\t\t\tdispatch(update${1:__ComponentName__}Failure(err));",
			"\t\t\t}",
			"\t\t);",
			"\t};",
			"}",
			"",
			"const update${1:__ComponentName__}Success = new${1:__ComponentName__} => {",
			"\treturn {",
			"\t\ttype: ${1:__ComponentName__}ActionTypes.UPDATE_${2:__CapitalComponentName__}_SUCCESS,",
			"\t\tpayload: new${1:__ComponentName__}",
			"\t};",
			"};",
			"const update${1:__ComponentName__}Failure = error => {",
			"\treturn {",
			"\t\ttype: ${1:__ComponentName__}ActionTypes.UPDATE_${2:__CapitalComponentName__}_FAILURE,",
			"\t\tpayload: error",
			"\t};",
			"};",
			"",
			"export default {",
			"\tgetAll${1:__ComponentName__}sStart,",
			"\taddNew${1:__ComponentName__}Start,",
			"\tdelete${1:__ComponentName__}Start,",
			"\tupdate${1:__ComponentName__}Start",
			"};",
			""
		]
	},
	"ReactJS : JS : RootIndexFile": {
		"prefix": "ccReactJS_JS_RootIndexFile",
		"body": [
			"import registerServiceWorker from './registerServiceWorker';",
			"",
			"import React from 'react';",
			"import ReactDOM from 'react-dom';",
			"import { Provider } from 'react-redux';",
			"import store from './store';",
			"import App from './App';",
			"",
			"ReactDOM.render(",
			"\t<Provider>",
			"\t\t<App />",
			"\t</Provider>,",
			"\tdocument.getElementById('root')",
			");",
			"",
			"// if (module.hot) {",
			"// \tmodule.hot.accept('./App', () => {",
			"// \t\tconst NextApp = require('./App').default;",
			"// \t\tReactDOM.render(",
			"// \t\t\t<Provider store={store}>",
			"// \t\t\t\t<NextApp />",
			"// \t\t\t</Provider>,",
			"// \t\t\tdocument.getElementById('root')",
			"// \t\t);",
			"// \t});",
			"// ",
			"// \tmodule.hot.accept('./reducers', () => {",
			"// \t\tconst nextRootReducer = require('./reducers').default;",
			"// \t\tstore.replaceReducer(nextRootReducer);",
			"// \t});",
			"// }",
			"",
			"registerServiceWorker();"
		]
	},
	"ReactJS : JS : Store": {
		"prefix": "ccReactJS_JS_Store",
		"body": [
			"import { createStore, applyMiddleware } from 'redux';",
			"import thunk from 'redux-thunk';",
			"import { composeWithDevTools } from 'redux-devtools-extension';",
			"import rootReducer from './rootReducer';",
			"",
			"const store = createStore(",
			"\trootReducer,",
			"\tcomposeWithDevTools(applyMiddleware(thunk))",
			");",
			"",
			"export default store;",
			""
		]
	},
	"ReactJS : JS : RootReducer": {
		"prefix": "ccReactJS_JS_RootReducer",
		"body": [
			"import { combineReducers } from 'redux';",
			"import { routerReducer } from 'react-router-redux';",
			"import { ${1:__ReducerName__}Reducer } from './${1:__ReducerName__}Reducer';",
			"",
			"const rootReducer = combineReducers({",
			"\trouterReducer,",
			"\t${1:__ReducerName__}s: ${1:__ReducerName__}Reducer",
			"});",
			"",
			"export default rootReducer;",
			""
		]
	},
	"ReactJS : JS : NewReducer": {
		"prefix": "ccReactJS_JS_NewReducer",
		"body": [
			"import * as ${1:__ComponentName__}ActionTypes from './${1:__ComponentName__}ActionTypes';",
			"",
			"const initialState = {",
			"\t${1:__ComponentName__}s: []",
			"};",
			"",
			"export default function ${1:__ComponentName__}(state = initialState, action) {",
			"\tswitch (action.type) {",
			"\t\tcase ${1:__ComponentName__}ActionTypes.GET_ALL_${2:__CapitalComponentName__}S_START: {",
			"\t\t\treturn {",
			"\t\t\t\t...state",
			"\t\t\t};",
			"\t\t}",
			"",
			"\t\tcase ${1:__ComponentName__}ActionTypes.GET_ALL_${2:__CapitalComponentName__}S_SUCCESS: {",
			"\t\t\treturn {",
			"\t\t\t\t...state,",
			"\t\t\t\t${1:__ComponentName__}s: action.payload",
			"\t\t\t};",
			"\t\t}",
			"",
			"\t\tcase ${1:__ComponentName__}ActionTypes.GET_ALL_${2:__CapitalComponentName__}S_FAILURE: {",
			"\t\t\treturn {",
			"\t\t\t\t...state,",
			"\t\t\t\terror: action.payload",
			"\t\t\t};",
			"\t\t}",
			"",
			"\t\tcase ${1:__ComponentName__}ActionTypes.ADD_NEW_${2:__CapitalComponentName__}_SUCCESS: {",
			"\t\t\treturn {",
			"\t\t\t\t...state,",
			"\t\t\t\t${1:__ComponentName__}s: [...state.${1:__ComponentName__}s, action.payload]",
			"\t\t\t};",
			"\t\t}",
			"",
			"\t\tcase ${1:__ComponentName__}ActionTypes.ADD_NEW_${2:__CapitalComponentName__}_FAILURE: {",
			"\t\t\treturn {",
			"\t\t\t\t...state,",
			"\t\t\t\terror: action.payload",
			"\t\t\t};",
			"\t\t}",
			"\t\tcase ${1:__ComponentName__}ActionTypes.DELETE_${2:__CapitalComponentName__}_SUCCESS: {",
			"\t\t\treturn {",
			"\t\t\t\t...state,",
			"\t\t\t\t${1:__ComponentName__}s: [",
			"\t\t\t\t\t...state.${1:__ComponentName__}s.filter(item => item.id !== action.payload)",
			"\t\t\t\t]",
			"\t\t\t};",
			"\t\t}",
			"",
			"\t\tcase ${1:__ComponentName__}ActionTypes.DELETE_${2:__CapitalComponentName__}_FAILURE: {",
			"\t\t\treturn {",
			"\t\t\t\t...state,",
			"\t\t\t\terror: action.payload",
			"\t\t\t};",
			"\t\t}",
			"\t\tcase ${1:__ComponentName__}ActionTypes.UPDATE_${2:__CapitalComponentName__}_SUCCESS: {",
			"\t\t\tconst ${1:__ComponentName__}s = state.${1:__ComponentName__}s.map(item => {",
			"\t\t\t\tif (item.id === action.payload.id) {",
			"\t\t\t\t\treturn action.payload;",
			"\t\t\t\t}",
			"\t\t\t\treturn item;",
			"\t\t\t});",
			"",
			"\t\t\treturn {",
			"\t\t\t\t...state,",
			"\t\t\t\t${1:__ComponentName__}s",
			"\t\t\t};",
			"\t\t}",
			"",
			"\t\tcase ${1:__ComponentName__}ActionTypes.UPDATE_${2:__CapitalComponentName__}_FAILURE: {",
			"\t\t\treturn {",
			"\t\t\t\t...state,",
			"\t\t\t\terror: action.payload",
			"\t\t\t};",
			"\t\t}",
			"",
			"\t\tdefault:",
			"\t\t\treturn state;",
			"\t}",
			"}",
			""
		]
	},
	"ReactJS : JS : ActionTypes": {
		"prefix": "ccReactJS_JS_ActionTypes",
		"body": [
			"export const GET_ALL_${1:__CapitalComponentName__}S_START = 'GET_ALL_${1:__CapitalComponentName__}S_START';",
			"export const GET_ALL_${1:__CapitalComponentName__}S_SUCCESS = 'GET_ALL_${1:__CapitalComponentName__}S_SUCCESS';",
			"export const GET_ALL_${1:__CapitalComponentName__}S_FAILURE = 'GET_ALL_${1:__CapitalComponentName__}S_FAILURE';",
			"export const ADD_NEW_${1:__CapitalComponentName__}_START = 'ADD_NEW_${1:__CapitalComponentName__}_START';",
			"export const ADD_NEW_${1:__CapitalComponentName__}_SUCCESS = 'ADD_NEW_${1:__CapitalComponentName__}_SUCCESS';",
			"export const ADD_NEW_${1:__CapitalComponentName__}_FAILURE = 'ADD_NEW_${1:__CapitalComponentName__}_FAILURE';",
			"export const DELETE_${1:__CapitalComponentName__}_START = 'DELETE_${1:__CapitalComponentName__}_START';",
			"export const DELETE_${1:__CapitalComponentName__}_SUCCESS = 'DELETE_${1:__CapitalComponentName__}_SUCCESS';",
			"export const DELETE_${1:__CapitalComponentName__}_FAILURE = 'DELETE_${1:__CapitalComponentName__}_FAILURE';",
			"export const UPDATE_${1:__CapitalComponentName__}_START = 'UPDATE_${1:__CapitalComponentName__}_START';",
			"export const UPDATE_${1:__CapitalComponentName__}_SUCCESS = 'UPDATE_${1:__CapitalComponentName__}_SUCCESS';",
			"export const UPDATE_${1:__CapitalComponentName__}_FAILURE = 'UPDATE_${1:__CapitalComponentName__}_FAILURE';",
			""
		]
	},
	"Route": {
		"prefix": "cc_js_<Route>",
		"body": ["<Route path=\"${1:__Path__}\" component={${2:__ComponentName__}} />"]
	},
	"MUI-Component": {
		"prefix": "cc_mui_grid",
		"body": [
			"import React from 'react';\r",
			"import { withStyles } from '@material-ui/core/styles';\r",
			"import Paper from '@material-ui/core/Paper';\r",
			"import Grid from '@material-ui/core/Grid';\r",
			"const styles = theme => ({\r",
			"  root: {\r",
			"    flexGrow: 1\r",
			"  },\r",
			"  paper: {\r",
			"    padding: theme.spacing(2),\r",
			"    textAlign: 'center',\r",
			"    color: theme.palette.text.secondary\r",
			"  }\r",
			"});\r",
			"\r",
			"const ${1:__ComponentName__}Container = props => <Grid container {...props} />;\r",
			"const ${1:__ComponentName__}Item = props => <Grid item xs={12} sm={6} md={3} {...props} />;\r",
			"\r",
			"const ${1:__ComponentName__} = withStyles(styles)(({ classes }) => (\r",
			"  <div className={classes.root}>\r",
			"    <${1:__ComponentName__}Container spacing={2}>\r",
			"      <${1:__ComponentName__}Item>\r",
			"        <Paper className={classes.paper}>xs=12 sm=6 md=3</Paper>\r",
			"      </${1:__ComponentName__}Item>\r",
			"      <${1:__ComponentName__}Item>\r",
			"        <Paper className={classes.paper}>xs=12 sm=6 md=3</Paper>\r",
			"      </${1:__ComponentName__}Item>\r",
			"      <${1:__ComponentName__}Item>\r",
			"        <Paper className={classes.paper}>xs=12 sm=6 md=3</Paper>\r",
			"      </${1:__ComponentName__}Item>\r",
			"      <${1:__ComponentName__}Item>\r",
			"        <Paper className={classes.paper}>xs=12 sm=6 md=3</Paper>\r",
			"      </${1:__ComponentName__}Item>\r",
			"    </${1:__ComponentName__}Container>\r",
			"  </div>\r",
			"));\r",
			"export default ${1:__ComponentName__};"
		]
	},
	"MUI-Component : Drawer : withSection": {
		"prefix": "cc_mui_drawer_withSection",
		"body": [
			"import React, { useState } from 'react';\r",
			"import {\r",
			"  Drawer,\r",
			"  Grid,\r",
			"  Button,\r",
			"  List,\r",
			"  ListItem,\r",
			"  ListItemIcon,\r",
			"  ListItemText,\r",
			"  Typography,\r",
			"  ListSubheader,\r",
			"  Collapse\r",
			"} from '@material-ui/core';\r",
			"import { withStyles } from '@material-ui/core/styles';\r",
			"import {\r",
			"  Add as AddIcon,\r",
			"  Remove as RemoveIcon,\r",
			"  ShowChart as ShowChartIcon\r",
			"} from '@material-ui/icons';\r",
			"\r",
			"const styles = theme => ({\r",
			"  alignContent: {\r",
			"    alignSelf: 'center'\r",
			"  },\r",
			"  listSubheader: {\r",
			"    padding: 0,\r",
			"    minWidth: 0,\r",
			"    color: 'inherit',\r",
			"    '&:hover': {\r",
			"      background: 'inherit'\r",
			"    }\r",
			"  }\r",
			"});\r",
			"\r",
			"const ListItems = ({ items, onClick, visible }) => (\r",
			"  <Collapse in={visible}>\r",
			"    {items\r",
			"      .filter(({ hidden }) => !hidden)\r",
			"      .map(({ label, disabled, Icon }, i) => (\r",
			"        <ListItem\r",
			"          button\r",
			"          key={i}\r",
			"          disabled={disabled}\r",
			"          onClick={() => onClick(label)}\r",
			"        >\r",
			"          <ListItemIcon>\r",
			"            <Icon />\r",
			"          </ListItemIcon>\r",
			"          <ListItemText>{label}</ListItemText>\r",
			"        </ListItem>\r",
			"      ))}\r",
			"  </Collapse>\r",
			");\r",
			"\r",
			"const ${1:__ComponentName__} = withStyles(styles)(({ classes, variant }) => {\r",
			"  const [open, setOpen] = useState(false);\r",
			"  const [content, setContent] = useState(false);\r",
			"  const [sections, setSections] = useState({\r",
			"    I: true,\r",
			"    II: false,\r",
			"    III: false,\r",
			"    IV: false\r",
			"  });\r",
			"  const [items] = useState({\r",
			"    I: [\r",
			"      { label: '1', Icon: AddIcon },\r",
			"      { label: '2', Icon: RemoveIcon },\r",
			"      { label: '3', Icon: ShowChartIcon }\r",
			"    ],\r",
			"    II: [\r",
			"      { label: '4', Icon: AddIcon },\r",
			"      { label: '5', Icon: ShowChartIcon }\r",
			"    ],\r",
			"    III: [\r",
			"      { label: '6', Icon: AddIcon },\r",
			"      { label: '7e', Icon: ShowChartIcon }\r",
			"    ],\r",
			"    IV: [\r",
			"      { label: '8', Icon: AddIcon, disabled: true },\r",
			"      { label: '9', Icon: ShowChartIcon }\r",
			"    ]\r",
			"  });\r",
			"\r",
			"  const onClick = content => {\r",
			"    setOpen(false);\r",
			"    setContent(content);\r",
			"  };\r",
			"\r",
			"  const toggleSection = name => () => {\r",
			"    setSections({ ...sections, [name]: !sections[name] });\r",
			"  };\r",
			"\r",
			"  return (\r",
			"    <Grid container justify='space-between'>\r",
			"      <Grid item className={classes.alignContent}>\r",
			"        <Typography>{content}</Typography>\r",
			"      </Grid>\r",
			"      <Grid item>\r",
			"        <Drawer open={open} onClose={() => setOpen(false)}>\r",
			"          <List>\r",
			"            <ListSubheader>\r",
			"              <Button\r",
			"                disableRipple\r",
			"                classes={{ root: classes.listSubheader }}\r",
			"                onClick={toggleSection('I')}\r",
			"              >\r",
			"                I\r",
			"              </Button>\r",
			"            </ListSubheader>\r",
			"            <ListItems visible={sections.I} items={items.I} onClick={onClick} />\r",
			"            <ListSubheader>\r",
			"              <Button\r",
			"                disableRipple\r",
			"                classes={{ root: classes.listSubheader }}\r",
			"                onClick={toggleSection('II')}\r",
			"              >\r",
			"                II\r",
			"              </Button>\r",
			"            </ListSubheader>\r",
			"            <ListItems\r",
			"              visible={sections.II}\r",
			"              items={items.II}\r",
			"              onClick={onClick}\r",
			"            />\r",
			"            <ListSubheader>\r",
			"              <Button\r",
			"                disableRipple\r",
			"                classes={{ root: classes.listSubheader }}\r",
			"                onClick={toggleSection('III')}\r",
			"              >\r",
			"                III\r",
			"              </Button>\r",
			"            </ListSubheader>\r",
			"            <ListItems\r",
			"              visible={sections.III}\r",
			"              items={items.III}\r",
			"              onClick={onClick}\r",
			"            />\r",
			"            <ListSubheader>\r",
			"              <Button\r",
			"                disableRipple\r",
			"                classes={{ root: classes.listSubheader }}\r",
			"                onClick={toggleSection('IV')}\r",
			"              >\r",
			"                IV\r",
			"              </Button>\r",
			"            </ListSubheader>\r",
			"            <ListItems\r",
			"              visible={sections.IV}\r",
			"              items={items.IV}\r",
			"              onClick={onClick}\r",
			"            />\r",
			"          </List>\r",
			"        </Drawer>\r",
			"      </Grid>\r",
			"      <Grid item>\r",
			"        <Button onClick={() => setOpen(!open)}>{open ? 'hide' : 'show'}</Button>\r",
			"      </Grid>\r",
			"    </Grid>\r",
			"  );\r",
			"});\r",
			"\r",
			"export default ${1:__ComponentName__};\r",
			""
		]
	},
	"MUI-Component : Tabs": {
		"prefix": "cc_mui_tabs",
		"body": [
			"import React, { useState } from 'react';\r",
			"import {\r",
			"  createMuiTheme,\r",
			"  withStyles,\r",
			"  ThemeProvider\r",
			"} from '@material-ui/core/styles';\r",
			"import Paper from '@material-ui/core/Paper';\r",
			"import Grid from '@material-ui/core/Grid';\r",
			"import { AppBar, Tabs, Tab, Typography } from '@material-ui/core';\r",
			"import MenuIcon from '@material-ui/icons/Menu';\r",
			"\r",
			"const theme = createMuiTheme({\r",
			"  palette: {\r",
			"    primary: { 500: '#D9D9DD' }\r",
			"  },\r",
			"  status: {\r",
			"    danger: 'orange'\r",
			"  }\r",
			"});\r",
			"\r",
			"const styles = theme => ({\r",
			"  root: {\r",
			"    flexGrow: 1,\r",
			"    backgroundColor: theme.palette.background.paper\r",
			"  },\r",
			"  flex: {\r",
			"    flex: 1\r",
			"  },\r",
			"  tabContent: {\r",
			"    padding: theme.spacing.unit * 2\r",
			"  },\r",
			"  menuButton: {\r",
			"    maginLeft: -12,\r",
			"    marginRight: 20\r",
			"  },\r",
			"  toolbarMargin: theme.mixins.toolbar\r",
			"});\r",
			"\r",
			"const ${1:__ComponentName__} = withStyles(styles)(({ classes }) => {\r",
			"  const [value, setValue] = useState(0);\r",
			"\r",
			"  const onChange = (e, value) => {\r",
			"    setValue(value);\r",
			"  };\r",
			"\r",
			"  return (\r",
			"    <ThemeProvider theme={theme}>\r",
			"      <div className={classes.root}>\r",
			"        <AppBar position=\"static\">\r",
			"          <Tabs value={value} onChange={onChange} indicatorColor=\"primary\">\r",
			"            <Tab label=\"T1\" disableRipple />\r",
			"            <Tab label=\"T2\" disableRipple />\r",
			"            <Tab label=\"T3\" disableRipple />\r",
			"          </Tabs>\r",
			"        </AppBar>\r",
			"        {value === 0 && (\r",
			"          <Typography component=\"div\" className={classes.tabContent}>\r",
			"            T1\r",
			"          </Typography>\r",
			"        )}\r",
			"        {value === 1 && (\r",
			"          <Typography component=\"div\" className={classes.tabContent}>\r",
			"            T2\r",
			"          </Typography>\r",
			"        )}\r",
			"        {value === 2 && (\r",
			"          <Typography component=\"div\" className={classes.tabContent}>\r",
			"            T3\r",
			"          </Typography>\r",
			"        )}\r",
			"        {/* <div className={classes.toolbarMargin}></div> */}\r",
			"      </div>\r",
			"    </ThemeProvider>\r",
			"  );\r",
			"});\r",
			"\r",
			"export default ${1:__ComponentName__};\r",
			""
		]
	},
	"MUI-Component : ExpansionPanel": {
		"prefix": "cc_mui_expansionPanel",
		"body": [
			"import React, { useState, Fragment } from 'react';\r",
			"import {\r",
			"  ExpansionPanel,\r",
			"  ExpansionPanelSummary,\r",
			"  ExpansionPanelDetails,\r",
			"  Typography\r",
			"} from '@material-ui/core';\r",
			"import { ExpandMore as ExpandMoreIcon } from '@material-ui/icons';\r",
			"\r",
			"export default function ${1:__ComponentName__}() {\r",
			"  const [panels] = useState([\r",
			"    { title: 'p1', content: 'p1 content' },\r",
			"    { title: 'p2', content: 'p2 content' },\r",
			"    { title: 'p3', content: 'p3 content', disabled: true },\r",
			"    { title: 'p4', content: 'p4 content', hidden: true }\r",
			"  ]);\r",
			"\r",
			"  const [expanded, setExpaneded] = useState();\r",
			"\r",
			"  const onChange = expanded => {\r",
			"    setExpaneded(expanded);\r",
			"  };\r",
			"\r",
			"  return (\r",
			"    <Fragment>\r",
			"      {panels\r",
			"        .filter(p => !p.hidden)\r",
			"        .map((p, i) => (\r",
			"          <ExpansionPanel\r",
			"            key={i}\r",
			"            disabled={p.disabled}\r",
			"            expanded={i === expanded}\r",
			"            onChange={() => onChange(i)}\r",
			"          >\r",
			"            <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\r",
			"              <Typography variant=\"subtitle1\">{p.title}</Typography>\r",
			"            </ExpansionPanelSummary>\r",
			"            <ExpansionPanelDetails>\r",
			"              <Typography>{p.content}</Typography>\r",
			"            </ExpansionPanelDetails>\r",
			"          </ExpansionPanel>\r",
			"        ))}\r",
			"    </Fragment>\r",
			"  );\r",
			"}\r",
			""
		]
	},
	"MUI-Component : List": {
		"prefix": "cc_mui_list",
		"body": [
			"import React, { useState } from 'react';\r",
			"import { withStyles } from '@material-ui/core/styles';\r",
			"import { List, ListItem, ListItemText } from '@material-ui/core';\r",
			"\r",
			"const styles = theme => ({\r",
			"  root: {\r",
			"    flexGrow: 1\r",
			"  },\r",
			"  paper: {\r",
			"    padding: theme.spacing(2),\r",
			"    textAlign: 'center',\r",
			"    color: theme.palette.text.secondary\r",
			"  }\r",
			"});\r",
			"\r",
			"const ${1:__ComponentName__} = withStyles(styles)(({ classes }) => {\r",
			"  const [items, setItems] = useState([\r",
			"    { name: 'xs=12 sm=6 md=3', timestamp: new Date() },\r",
			"    { name: 'xs=12 sm=6 md=3', timestamp: new Date() },\r",
			"    { name: 'xs=12 sm=6 md=3', timestamp: new Date() }\r",
			"  ]);\r",
			"\r",
			"  const onClick = index => () => {\r",
			"    const item = items[index];\r",
			"    const newItems = [...items];\r",
			"    newItems[index] = { ...item, selected: !item.selected };\r",
			"    setItems(newItems);\r",
			"  };\r",
			"\r",
			"  return (\r",
			"    <List>\r",
			"      {items.map((item, index) => {\r",
			"        return (\r",
			"          <ListItem\r",
			"            key={index}\r",
			"            button\r",
			"            dense\r",
			"            selected={item.selected}\r",
			"            onClick={onClick(index)}\r",
			"          >\r",
			"            <ListItemText\r",
			"              primary={item.name}\r",
			"              secondary={item.timestamp.toLocaleString()}\r",
			"              primaryTypographyProps={{\r",
			"                color: item.selected ? 'primary' : undefined\r",
			"              }}\r",
			"            />\r",
			"          </ListItem>\r",
			"        );\r",
			"      })}\r",
			"    </List>\r",
			"  );\r",
			"});\r",
			"\r",
			"export default ${1:__ComponentName__};\r",
			""
		]
	},
	"MUI-Component : List : WithAvatar": {
		"prefix": "cc_mui_list_withAvatar",
		"body": [
			"import React, { useState } from 'react';\r",
			"import { withStyles } from '@material-ui/core/styles';\r",
			"import {\r",
			"  List,\r",
			"  ListItem,\r",
			"  ListItemText,\r",
			"  ListItemIcon,\r",
			"  Avatar\r",
			"} from '@material-ui/core';\r",
			"import {\r",
			"  Markunread as MarkunreadIcon,\r",
			"  PriorityHigh as PriorityHighIcon,\r",
			"  LowPriority as LowPriorityIcon,\r",
			"  Delete as DeleteIcon\r",
			"} from '@material-ui/icons';\r",
			"import clsx from 'clsx';\r",
			"\r",
			"const styles = theme => ({\r",
			"  root: {\r",
			"    flexGrow: 1\r",
			"  },\r",
			"  paper: {\r",
			"    padding: theme.spacing(2),\r",
			"    textAlign: 'center',\r",
			"    color: theme.palette.text.secondary\r",
			"  }\r",
			"});\r",
			"\r",
			"const ${1:__ComponentName__} = withStyles(styles)(({ classes }) => {\r",
			"  const [items] = useState([\r",
			"    {\r",
			"      name: 'Unread',\r",
			"      timestamp: new Date(),\r",
			"      Icon: MarkunreadIcon,\r",
			"      notifications: 1\r",
			"    },\r",
			"    {\r",
			"      name: 'High Priority',\r",
			"      timestamp: new Date(),\r",
			"      Icon: PriorityHighIcon\r",
			"    },\r",
			"    {\r",
			"      name: 'Low Priority',\r",
			"      timestamp: new Date(),\r",
			"      Icon: LowPriorityIcon\r",
			"    },\r",
			"    { name: 'Junk', timestamp: new Date(), Icon: DeleteIcon }\r",
			"  ]);\r",
			"\r",
			"  return (\r",
			"    <List>\r",
			"      {items.map(({ Icon, ...item }, index) => {\r",
			"        return (\r",
			"          <ListItem key={index} button dense selected={item.selected}>\r",
			"            <ListItemIcon>\r",
			"              <Avatar>\r",
			"                <Icon />\r",
			"              </Avatar>\r",
			"            </ListItemIcon>\r",
			"            <ListItemText\r",
			"              primary={item.name}\r",
			"              secondary={item.timestamp.toLocaleDateString()}\r",
			"              primaryTypographyProps={{\r",
			"                color: item.selected ? 'primary' : undefined\r",
			"              }}\r",
			"            />\r",
			"          </ListItem>\r",
			"        );\r",
			"      })}\r",
			"    </List>\r",
			"  );\r",
			"});\r",
			"\r",
			"export default ${1:__ComponentName__};\r",
			""
		]
	},
	"MUI-Component : Table": {
		"prefix": "cc_mui_table",
		"body": [
			"import React, { useState, useEffect } from 'react';\r",
			"import { makeStyles } from '@material-ui/core/styles';\r",
			"import {\r",
			"  Table,\r",
			"  TableBody,\r",
			"  TableCell,\r",
			"  TableHead,\r",
			"  TableRow,\r",
			"  Paper,\r",
			"  CircularProgress\r",
			"} from '@material-ui/core';\r",
			"\r",
			"const fetchData = () =>\r",
			"  new Promise(resolve => {\r",
			"    const items = [\r",
			"      {\r",
			"        id: 1,\r",
			"        name: 'First item',\r",
			"        created: new Date(),\r",
			"        high: 2935,\r",
			"        low: 1924,\r",
			"        average: 2429.5\r",
			"      },\r",
			"      {\r",
			"        id: 2,\r",
			"        name: 'Second item',\r",
			"        created: new Date(),\r",
			"        high: 439,\r",
			"        low: 231,\r",
			"        average: 335\r",
			"      },\r",
			"      {\r",
			"        id: 3,\r",
			"        name: 'Third item',\r",
			"        created: new Date(),\r",
			"        high: 8239,\r",
			"        low: 5629,\r",
			"        average: 6934\r",
			"      },\r",
			"      {\r",
			"        id: 4,\r",
			"        name: 'Fourth item',\r",
			"        created: new Date(),\r",
			"        high: 3203,\r",
			"        low: 3127,\r",
			"        average: 3165\r",
			"      },\r",
			"      {\r",
			"        id: 5,\r",
			"        name: 'Fifth item',\r",
			"        created: new Date(),\r",
			"        high: 981,\r",
			"        low: 879,\r",
			"        average: 930\r",
			"      }\r",
			"    ];\r",
			"    setTimeout(() => {\r",
			"      resolve(items);\r",
			"    }, 1000);\r",
			"  });\r",
			"\r",
			"const usePaperStyles = makeStyles(theme => ({\r",
			"  root: { margin: theme.spacing(2), textAlign: 'center' }\r",
			"}));\r",
			"\r",
			"const useProgressStyles = makeStyles(theme => ({\r",
			"  progress: { margin: theme.spacing(2) }\r",
			"}));\r",
			"\r",
			"function LoadingIndicator({ loading }) {\r",
			"  const classes = useProgressStyles();\r",
			"  return loading ? <CircularProgress className={classes.progress} /> : null;\r",
			"}\r",
			"\r",
			"export default function ${1:__ComponentName__}() {\r",
			"  const classes = usePaperStyles();\r",
			"  const [loading, setLoading] = useState(true);\r",
			"  const [items, setItems] = useState([]);\r",
			"\r",
			"  useEffect(() => {\r",
			"    fetchData().then(items => {\r",
			"      setItems(items);\r",
			"      setLoading(false);\r",
			"    });\r",
			"  }, []);\r",
			"\r",
			"  return (\r",
			"    <Paper className={classes.root}>\r",
			"      <Table>\r",
			"        <TableHead>\r",
			"          <TableRow>\r",
			"            <TableCell>item </TableCell>\r",
			"            <TableCell>timestamp</TableCell>\r",
			"            <TableCell align=\"right\">high </TableCell>\r",
			"            <TableCell align=\"right\">low</TableCell>\r",
			"            <TableCell align=\"right\">average</TableCell>\r",
			"          </TableRow>\r",
			"        </TableHead>\r",
			"        <TableBody>\r",
			"          {items.map(item => {\r",
			"            return (\r",
			"              <TableRow key={item.id}>\r",
			"                <TableCell component=\"th\" scope=\"row\">\r",
			"                  {item.name}\r",
			"                </TableCell>\r",
			"                <TableCell>{item.created.toLocaleString()}</TableCell>\r",
			"                <TableCell align=\"right\">{item.high}</TableCell>\r",
			"                <TableCell align=\"right\">{item.low}</TableCell>\r",
			"                <TableCell align=\"right\">{item.average}</TableCell>\r",
			"              </TableRow>\r",
			"            );\r",
			"          })}\r",
			"        </TableBody>\r",
			"      </Table>\r",
			"      <LoadingIndicator loading={loading} />\r",
			"    </Paper>\r",
			"  );\r",
			"}\r",
			""
		]
	},
	"MUI-Component : Table : Sortable": {
		"prefix": "cc_mui_table_sortable",
		"body": [
			"import React, { useState, useEffect } from 'react';\r",
			"import { makeStyles } from '@material-ui/core/styles';\r",
			"import {\r",
			"  Table,\r",
			"  TableBody,\r",
			"  TableCell,\r",
			"  TableHead,\r",
			"  TableRow,\r",
			"  TableSortLabel,\r",
			"  Paper\r",
			"} from '@material-ui/core';\r",
			"\r",
			"const comparator = (prop, desc = true) => (a, b) => {\r",
			"  const order = desc ? -1 : 1;\r",
			"\r",
			"  if (a[prop] < b[prop]) {\r",
			"    return -1 * order;\r",
			"  }\r",
			"  if (a[prop] > b[prop]) {\r",
			"    return order;\r",
			"  }\r",
			"  return 0;\r",
			"};\r",
			"\r",
			"const usePaperStyles = makeStyles(theme => ({\r",
			"  root: { margin: theme.spacing(2), textAlign: 'center' }\r",
			"}));\r",
			"\r",
			"export default function ${1:__ComponentName__}() {\r",
			"  const classes = usePaperStyles();\r",
			"  const [columns, setColumns] = useState([\r",
			"    { name: 'Name', active: true, order: 'asc' },\r",
			"    { name: 'Created', active: false },\r",
			"    { name: 'High', active: false, numeric: true },\r",
			"    { name: 'Low', active: false, numeric: true },\r",
			"    { name: 'Average', active: false, numeric: true }\r",
			"  ]);\r",
			"  const [rows, setRows] = useState([\r",
			"    {\r",
			"      id: 1,\r",
			"      name: '1st Item',\r",
			"      created: new Date(),\r",
			"      high: 1000,\r",
			"      low: 100,\r",
			"      average: 250\r",
			"    },\r",
			"    {\r",
			"      id: 2,\r",
			"      name: '2nd Item',\r",
			"      created: new Date(),\r",
			"      high: 2000,\r",
			"      low: 300,\r",
			"      average: 1500\r",
			"    },\r",
			"    {\r",
			"      id: 3,\r",
			"      name: '3rd Item',\r",
			"      created: new Date(),\r",
			"      high: 500,\r",
			"      low: 10,\r",
			"      average: 300\r",
			"    },\r",
			"    {\r",
			"      id: 4,\r",
			"      name: '4th Item',\r",
			"      created: new Date(),\r",
			"      high: 5000,\r",
			"      low: 3000,\r",
			"      average: 4500\r",
			"    },\r",
			"    {\r",
			"      id: 5,\r",
			"      name: '5th Item',\r",
			"      created: new Date(),\r",
			"      high: 100,\r",
			"      low: 30,\r",
			"      average: 60\r",
			"    }\r",
			"  ]);\r",
			"\r",
			"  const onSortClick = index => () => {\r",
			"    setColumns(\r",
			"      columns.map((column, i) => ({\r",
			"        ...column,\r",
			"        active: index === i,\r",
			"        order:\r",
			"          (index === i && (column.order === 'desc' ? 'asc' : 'desc')) ||\r",
			"          undefined\r",
			"      }))\r",
			"    );\r",
			"    setRows(\r",
			"      rows\r",
			"        .slice()\r",
			"        .sort(\r",
			"          comparator(\r",
			"            columns[index].name.toLowerCase(),\r",
			"            columns[index].order !== 'desc'\r",
			"          )\r",
			"        )\r",
			"    );\r",
			"  };\r",
			"\r",
			"  return (\r",
			"    <Paper className={classes.root}>\r",
			"      <Table>\r",
			"        <TableHead>\r",
			"          <TableRow>\r",
			"            {columns.map((column, index) => (\r",
			"              <TableCell\r",
			"                key={column.name}\r",
			"                align={column.numeric ? 'right' : 'inherit'}\r",
			"              >\r",
			"                <TableSortLabel\r",
			"                  active={column.active}\r",
			"                  direction={column.order}\r",
			"                  onClick={onSortClick(index)}\r",
			"                >\r",
			"                  {column.name}\r",
			"                </TableSortLabel>\r",
			"              </TableCell>\r",
			"            ))}\r",
			"          </TableRow>\r",
			"        </TableHead>\r",
			"        <TableBody>\r",
			"          {rows.map(row => (\r",
			"            <TableRow key={row.id}>\r",
			"              <TableCell>{row.name}</TableCell>\r",
			"              <TableCell>{row.created.toLocaleDateString()}</TableCell>\r",
			"              <TableCell align=\"right\">{row.high}</TableCell>\r",
			"              <TableCell align=\"right\">{row.low}</TableCell>\r",
			"              <TableCell align=\"right\">{row.average}</TableCell>\r",
			"            </TableRow>\r",
			"          ))}\r",
			"        </TableBody>\r",
			"      </Table>\r",
			"    </Paper>\r",
			"  );\r",
			"}\r",
			""
		]
	},
	"useState": {
		"prefix": "ccJS_useState",
		"body": ["const [${1:__StateName__}, set${1/^(.)(.*)$/${1:/upcase}${2}/}] = useState(${0});"]
	},
	"useMemo": {
		"prefix": "ccJS_useMemo",
		"body": ["\tconst ${1:__memoName__} = useMemo(() => {", "\t\t${0}", "\t}, [${2:__deps__}]);"]
	},
	"useEffect": {
		"prefix": "ccJS_useEffect",
		"body": ["\tconst ${1:__effectName__} = useEffect(() => {", "\t\t${0}", "\t}, [${2:__deps__}]);"]
	}
}
