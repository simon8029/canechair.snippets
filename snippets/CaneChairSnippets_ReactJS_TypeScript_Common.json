{
	"useState": {
		"prefix": "ccJS_TypeScript_useState",
		"body": [
			"const [${1:__StateName__}, set${1/^(.)(.*)$/${1:/upcase}${2}/}] = React.useState<${2:__StateDataType__}>(${0});"
		]
	},
	"useMemo": {
		"prefix": "ccJS_useMemo",
		"body": ["\tconst ${1:__memoName__} = useMemo(() => {", "\t\t${0}", "\t}, [${2:__deps__}]);"]
	},
	"useEffect": {
		"prefix": "ccJS_useEffect",
		"body": ["\tconst ${1:__effectName__} = useEffect(() => {", "\t\t${0}", "\t}, [${2:__deps__}]);"]
	},
	"useCustomHook": {
		"prefix": "ccJS_TypeScript_useCustomHook",
		"body": [
			"export function use${1:__CustomHookName__}() {",
			"  const [${1:__CustomHookName__}State, set${1:__CustomHookName__}State] = React.useState(false);",
			"  const 1/^(.)(.*)$/${1:/downcase}${2}/ = (aPromise: Promise<any>) => {",
			"    set${1:__CustomHookName__}State(true);",
			"    return aPromise.finally(() => set${1:__CustomHookName__}State(false));",
			"  };",
			"  return [${1:__CustomHookName__}State, 1/^(.)(.*)$/${1:/downcase}${2}/] as const;",
			"}"
		],
		"description": "use${__CustomHookName__}"
	},
	"Functional Component": {
		"prefix": "ccReactJS_TypeScript_FunctionalComponent",
		"body": [
			"import React from 'react'",
			"",
			"type ${1:__ComponentName__}Props = {",
			"  children: React.ReactNode;",
			"}",
			"",
			"export const ${1:__ComponentName__} = (props:${1:__ComponentName__}Props) => {",
			"  return <>${1:__ComponentName__} here.</>",
			"}",
			"",
			""
		],
		"description": "Functional Component"
	},

	"Arrow Function": {
		"prefix": "ccTS_Arrow_Function",
		"body": ["\tconst ${1:__FunctionName__}: ${2:__Type__} = (${3:__args__}) => {", "\t\t${0}", "\t};"]
	},
	"index.tsx": {
		"prefix": "ccTS_index.tsx",
		"body": [
			"import React from 'react';",
			"import ReactDOM from 'react-dom';",
			"import { Provider } from 'react-redux';",
			"import App from './app/App';",
			"import store from './app/store';",
			"import reportWebVitals from './reportWebVitals';",
			"",
			"ReactDOM.render(",
			"\t<Provider store={store}>",
			"\t\t<App />",
			"\t</Provider>,",
			"\tdocument.getElementById('root'),",
			");",
			"",
			"// If you want to start measuring performance in your app, pass a function",
			"// to log results (for example: reportWebVitals(console.log))",
			"// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals",
			"reportWebVitals();",
			""
		]
	},
	"Form": {
		"prefix": "ccTS_Form",
		"body": [
			"<form>",
			"\t\t\t<div>",
			"\t\t\t\t<label htmlFor='input1'>Input:</label>",
			"\t\t\t\t<input name='input1' value={inputValue} onChange={onInputChanged} />",
			"\t\t\t\t<button type='button' onClick={onButtonClicked}>",
			"\t\t\t\t\tButton",
			"\t\t\t\t</button>",
			"\t\t\t</div>",
			"\t\t</form>"
		]
	}
}
