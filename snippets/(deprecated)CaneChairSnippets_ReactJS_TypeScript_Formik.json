{
	"Formik": {
		"prefix": "ccReactJS_TypeScript_Formik",
		"body": [
			"import React from 'react';",
			"import { ErrorMessage, Field, Form, Formik, useField } from 'formik';",
			"import * as Yup from 'yup';",
			"",
			"export const ${1:__FormName__} = (): JSX.Element => {",
			"\tconst CustomCheckBox = ({ children, ...props }: any) => {",
			"\t\tconst [field, meta] = useField({ ...props, type: 'checkbox' });",
			"\t\treturn (",
			"\t\t\t<div>",
			"\t\t\t\t<label className='checkbox-input'>",
			"\t\t\t\t\t<input type='checkbox' {...field} {...props} />",
			"\t\t\t\t\t{children}",
			"\t\t\t\t</label>",
			"\t\t\t\t{meta.touched && meta.error ? (",
			"\t\t\t\t\t<div className='error'>{meta.error}</div>",
			"\t\t\t\t) : null}",
			"\t\t\t</div>",
			"\t\t);",
			"\t};",
			"",
			"\tconst CustomSelect = ({ label, ...props }: any) => {",
			"\t\tconst [field, meta] = useField(props);",
			"\t\treturn (",
			"\t\t\t<div>",
			"\t\t\t\t<label htmlFor={props.id || props.name}>{label}</label>",
			"\t\t\t\t<select {...field} {...props} />",
			"\t\t\t\t{meta.touched && meta.error ? (",
			"\t\t\t\t\t<div className='error'>{meta.error}</div>",
			"\t\t\t\t) : null}",
			"\t\t\t</div>",
			"\t\t);",
			"\t};",
			"",
			"\treturn (",
			"\t\t<>",
			"\t\t\t<h1>Form Title</h1>",
			"\t\t\t<Formik",
			"\t\t\t\tinitialValues={{ input1: '', input2: '', input3: '' }}",
			"\t\t\t\tvalidationSchema={Yup.object({",
			"\t\t\t\t\tinput1: Yup.string()",
			"\t\t\t\t\t\t.max(15, 'Must be 15 characters or less')",
			"\t\t\t\t\t\t.required('Required'),",
			"\t\t\t\t\tinput2: Yup.string()",
			"\t\t\t\t\t\t.max(20, 'Must be 20 characters or less')",
			"\t\t\t\t\t\t.required('Required'),",
			"\t\t\t\t\tinput3: Yup.string()",
			"\t\t\t\t\t\t.email('Invalid email address')",
			"\t\t\t\t\t\t.required('Required'),",
			"\t\t\t\t})}",
			"\t\t\t\tonSubmit={(values, { setSubmitting }) => {",
			"\t\t\t\t\tsetTimeout(() => {",
			"\t\t\t\t\t\talert(JSON.stringify(values, null, 2));",
			"\t\t\t\t\t\tsetSubmitting(false);",
			"\t\t\t\t\t}, 400);",
			"\t\t\t\t}}>",
			"\t\t\t\t{({ isSubmitting, isValid, dirty }) => (",
			"\t\t\t\t\t<Form>",
			"\t\t\t\t\t\t<label htmlFor='input1'>input1</label>",
			"\t\t\t\t\t\t<Field name='input1' />",
			"\t\t\t\t\t\t<ErrorMessage name='input1' />",
			"\t\t\t\t\t\t<label htmlFor='input2'>input2</label>",
			"\t\t\t\t\t\t<Field name='input2' />",
			"\t\t\t\t\t\t<ErrorMessage name='input2' />",
			"\t\t\t\t\t\t<label htmlFor='input3'>input3</label>",
			"\t\t\t\t\t\t<Field name='input3' />",
			"\t\t\t\t\t\t<ErrorMessage name='input3' />",
			"\t\t\t\t\t\t<CustomSelect label='Option: ' name='option'>",
			"\t\t\t\t\t\t\t<option value='' disabled>",
			"\t\t\t\t\t\t\t\tSelect a option",
			"\t\t\t\t\t\t\t</option>",
			"\t\t\t\t\t\t\t<option value='designer'>Option 1</option>",
			"\t\t\t\t\t\t\t<option value='development'>Option 2</option>",
			"\t\t\t\t\t\t\t<option value='product'>Option 3</option>",
			"\t\t\t\t\t\t\t<option value='other'>Option 4</option>",
			"\t\t\t\t\t\t</CustomSelect>",
			"\t\t\t\t\t\t<CustomCheckBox name='termsAndConditions'>",
			"\t\t\t\t\t\t\tTerms and Conditions",
			"\t\t\t\t\t\t</CustomCheckBox>",
			"",
			"\t\t\t\t\t\t<button type='submit' disabled={!dirty || !isValid || isSubmitting}>",
			"\t\t\t\t\t\t\tSubmit",
			"\t\t\t\t\t\t</button>",
			"\t\t\t\t\t</Form>",
			"\t\t\t\t)}",
			"\t\t\t</Formik>",
			"\t\t</>",
			"\t);",
			"};",
			""
		],
		"description": "Create a Formik Form"
	},
	"Formik_MUI_TextField": {
		"prefix": "ccReactJS_TypeScript_Formik_MaterialUI_TextField",
		"body": [
			"<TextField",
			"\t\t\t\tid='${1:__TextFieldName__}'",
			"\t\t\t\tname='${1:__TextFieldName__}'",
			"\t\t\t\tlabel='${1:__TextFieldName__}'",
			"\t\t\t\tvalue={formik.values.${1:__TextFieldName__}}",
			"\t\t\t\tonChange={formik.handleChange}",
			"\t\t\t\terror={",
			"\t\t\t\t\tformik.touched.${1:__TextFieldName__} &&",
			"\t\t\t\t\tBoolean(formik.errors.${1:__TextFieldName__})",
			"\t\t\t\t}",
			"\t\t\t\thelperText={",
			"\t\t\t\t\tformik.touched.${1:__TextFieldName__} && formik.errors.${1:__TextFieldName__}",
			"\t\t\t\t}",
			"\t\t\t/>"
		],
		"description": "Create MUI TextField with Formik"
	}
}
